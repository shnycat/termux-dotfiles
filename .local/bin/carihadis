#!/data/data/com.termux/files/usr/bin/env python
from urllib.request import urlopen
from urllib.error import URLError, HTTPError
import json, sys, re

api = 'http://api.carihadis.com/'
args = sys.argv
query = ''

# variabel warna
zero = '\033[0m'
reset = '\033[0;1m'
yellow = '\033[1;93m'
red = '\033[1;91m'
green = '\033[1;92m'
blue = '\033[1;94m'

def cari_kata_kunci():
    global kitab, id_, query
    url = api +'?q='+ query
    raw = urlopen(url)
    json_ = json.loads(bs(raw, 'html.parser').text)
    data = json_['data']

    # checks and exit if the given query remains null
    if data == None:
        raise URLError('')

    # prints list of kitabs matched the query
    jumlah_kitab = 0
    for i in range(len(data)):
        kitab = data[i]['kitab']
        jumlah_kitab += 1
        print(str(i+1) +'. '+ reset + kitab + zero)

    # validation for user input match the given list
    while True:
        pilih = input(f'{blue}Pilih Kitab [1-'+ str(jumlah_kitab) +f']: {zero}')

        if pilih in [str(i) for i in range(1, jumlah_kitab+1)]:
            pilih = int(pilih) - 1
            break
        else:
            print(f'{red}Masukkan angka 1-{jumlah_kitab} saja{zero}')

    kitab = data[pilih]['kitab']
    id_ = data[pilih]['id']

    # checks whether there is only one id_ and will then automatically assigned
    if len(id_) == 1:
        id_ = id_[0]
    else:
        for j in range(len(id_)):
            print(green + id_[j]+' ', end='')
        print('')

        # again, input validation
        while True:
            pilih = input(f'{blue}Pilih Nomor Hadis. Misalnya saja, {reset}' + id_[0] + f':{yellow} ')
            if not(pilih) in id_:
                print(f'{yellow}Pilih salah satu dari angka diatas{zero}')
            else:
                break
        id_ = pilih

def print_hadith():
    global kitab
    url = api +'?kitab=' + kitab + '&id=' + id_
    raw = urlopen(url)

    # convert json-like string into py-dictionary
    json_ = json.loads(bs(raw, 'html.parser').text)
    data = json_['data']['1']

    # checks and return exit if the given query remains null. means query is not found
    if data == None:
        raise URLError('')

# get the data from scraped json
    nass = data['nass']
    terjemah = data['terjemah']

    # for highlighting the rawies
    terjemah = re.sub(r'\[', yellow, terjemah)
    terjemah = re.sub(r'\]', reset, terjemah)

    # make all html tags disappeared
    terjemah = re.sub(re.compile('<.*?>'), '', terjemah)

    # highlights the given query
    for i in args[1:]:
        terjemah = re.sub(f'{i.capitalize()}', f'{green}{i.capitalize()}{reset}', terjemah)
        terjemah = re.sub(f'{i}', f'{green}{i}{reset}', terjemah)

    # convert kitab_format into kitab format
    kitab = ' '.join(kitab.split('_'))
    title = reset+kitab+zero +' nomor '+ yellow + id_

    # final output
    print(green +'-' * (len(title)-17) + zero)
    print(title,'\n')
    print(blue + nass + reset)
    print('\n', reset + terjemah + zero)

# prints list of kitabs available in the web
def print_kutubun():
    raw = urlopen(api)
    kutubun = json.loads(bs(raw, 'html.parser').text)['kitab']

    for i in range(len(kutubun)):
        print(f'{reset}{i+1}.{green}', kutubun[i])

def banner_or_whatever(): # template
    return f'''{blue}
                   _   _           _ _ _   _
 _ __  _   _      | | | | __ _  __| (_) |_| |__
| '_ \| | | |_____| |_| |/ _` |/ _` | | __| '_ \\
| |_) | |_| |_____|  _  | (_| | (_| | | |_| | | |
| .__/ \__, |     |_| |_|\__,_|\__,_|_|\__|_| |_|
|_|    |___/{reset}  v1.0-termux{green}
-----------------{reset} 
Pemakaian:
./{green}carihadis{reset} [OPSI]
{yellow}
(pastikan Anda memiliki koneksi internet)
{reset}
OPSI:
-----
 <kata kunci>     - {yellow}mencari hadis berdasarkan kata kunci{reset}
 <kitab>:<nomor>  - {yellow}mencari hadis berdasarkan kitab dan nomor hadis{reset}
 -kitab           - {yellow}menampilkan daftar kitab yang tersedia{reset}

Contoh:
./{green}carihadis {reset}puasa ramadhan
./{green}carihadis {reset}Shahih_Bukhari:1
{zero}
Info: {blue}http://www.carihadis.com{zero}
'''

# start execute
try:
    from bs4 import BeautifulSoup as bs

    if len(args) == 1:
        print(banner_or_whatever())
    elif args[1] == '-kitab':
        print_kutubun()
    elif len(args) == 2:
        arg = args[1].split(':')
        if len(arg) > 1:
            kitab = arg[0]
            id_ = arg[1]
            print_hadith()
        else:
            query = args[1]
            cari_kata_kunci()
            print_hadith()
    elif len(args) > 2:
        query = '+'.join(args[1:])
        cari_kata_kunci()
        print_hadith()

except KeyboardInterrupt:
    print(f'{red}dibatalkan!{zero}')
except TypeError:
    print(f'{yellow}Maaf, terjadi kesalahan :({zero}')

# handling 404 not found url, though in this case is unnecessary
except HTTPError as er:
    print(er)
except URLError: # handling given query not found
    q = ' '.join(query.split('+'))
    print(f'{red}Maaf, tidak ada yang cocok dengan kata kunci "{yellow+q+red}"\nCobalah dengan katakunci yang lebih umum{zero}')
except json.decoder.JSONDecodeError:
    print(f'{red}Oops, terjadi kesalahan saat parsing{zero}')
except ModuleNotFoundError: # when user havent installled bs4 module yet
    print(f'{red}E:{zero} Modul bs4 tidak ditemukan')
    print(f'{yellow}W:{zero} Instal modul bs4 terlebih dahulu: ')
    print(f'\n{green}  python -m pip install bs4{zero}\n')
